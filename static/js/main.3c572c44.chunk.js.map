{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","height","width","backgroundColor","display","alignItems","justifyContent","content","padding","flexDirection","header","headerText","fontSize","fontWeight","color","numFields","fieldWrapper","marginTop","paddingTop","paddingBottom","overflowY","field","marginBottom","buttonWrapper","button","DateComponent","props","setDate","min","max","index","utils","DateFnsUtils","style","marginRight","margin","id","label","format","value","onChange","date","KeyboardButtonProps","App","classes","useState","setNumFields","type","constraint","fields","setFields","numRows","setNumRows","convertAndDownload","data","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","JSON","stringify","a","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","generateRandomInteger","Math","floor","random","generateRandomFloat","toFixed","generateString","length","result","characters","charactersLength","i","charAt","val","newFields","parse","Box","className","Typography","TextField","fullWidth","variant","e","push","pop","map","changeValue","flex","Select","Date","changeType","MenuItem","disabled","changeMin","changeMax","Button","onClick","item","j","generatedVal","parseInt","parseFloat","round","moment","valueOf","sort","b","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3c572c44.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Box, makeStyles, Typography, TextField, Select, MenuItem, Button } from '@material-ui/core'\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport moment from 'moment';\n\nconst useStyles = makeStyles({\n  root: {\n    height: '100vh',\n    width: '100vw',\n    backgroundColor: '#f6f6f6',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  content: {\n    padding: 50,\n    width: '60%',\n    height: '60%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    backgroundColor: '#fff',\n  },\n  header: {\n    height: '10%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headerText: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    color: '#2d2d2d',\n  },\n  numFields: {\n    height: '10%',\n    width: '100%',\n  },\n  fieldWrapper: {\n    marginTop: 10,\n    paddingTop: 10,\n    paddingBottom: 10,\n    height: '65%',\n    display: 'flex',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    flexDirection: 'column',\n    overflowY: 'scroll',\n  },\n  field: {\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    marginBottom: 10,\n    display: 'flex'\n  },\n  buttonWrapper: {\n    height: '10%',\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  button: {\n    width: '100%',\n    height: '80%',\n  }\n});\n\nconst App = () => {\n\n  const classes = useStyles()\n  const [numFields, setNumFields] = useState(1)\n  const [fields, setFields] = useState([{\n    value: '',\n    type: 'text',\n    constraint: '',\n    min: '',\n    max: ''\n  }])\n  const [numRows, setNumRows] = useState(10)\n\n  const changeNumFields = (e) => {\n    let val = e.target.value\n    if (val > numFields) {\n      let newFields = fields\n      for (let i = numFields; i < val; i++) {\n        newFields.push({\n          value: '',\n          type: 'text',\n          constraint: ''\n        })\n      }\n      setFields(newFields)\n    } else {\n      let newFields = fields\n      for (let i = val; i < numFields; i++) {\n        newFields.pop()\n      }\n      setFields(newFields)\n    }\n    setNumFields(val)\n  }\n\n  const changeValue = (e, i) => {\n    let newFields = JSON.parse(JSON.stringify(fields))\n    newFields[i].value = e.target.value\n    setFields(newFields)\n  }\n\n  const changeType = (e, i) => {\n    let newFields = JSON.parse(JSON.stringify(fields))\n    newFields[i].type = e.target.value\n    if (e.target.value == 'date') {\n      newFields[i].min = new Date()\n      newFields[i].max = new Date()\n    }\n    setFields(newFields)\n  }\n\n  const changeMin = (e, i) => {\n    let newFields = JSON.parse(JSON.stringify(fields))\n    newFields[i].min = e.target.value\n    setFields(newFields)\n  }\n\n  const changeMax = (e, i) => {\n    let newFields = JSON.parse(JSON.stringify(fields))\n    newFields[i].max = e.target.value\n    setFields(newFields)\n  }\n\n  const generate = () => {\n    let data = []\n    for (let i = 0; i < numRows; i++) {\n      let item = {}\n      for (let j = 0; j < numFields; j++) {\n        const { min, max, value, type } = fields[j]\n        let generatedVal\n        if (type == 'text') {\n          generatedVal = generateString(parseInt(min), parseInt(max))\n        } else if (type == 'int') {\n          generatedVal = generateRandomInteger(parseInt(min), parseInt(max))\n        } else if (type == 'float') {\n          generatedVal = parseFloat(generateRandomFloat(parseInt(min), parseInt(max)))\n        } else if (type == 'boolean') {\n          let arr = [true, false]\n          generatedVal = arr[Math.round(Math.random())]\n        } else {\n          generatedVal = generateRandomInteger(moment(min).valueOf(), moment(max).valueOf())\n        }\n        item[value] = generatedVal\n      }\n      data.push(item)\n    }\n    data = data.sort(function (a, b) { return a - b });\n    convertAndDownload(data)\n  }\n\n  const convertAndDownload = (data) => {\n    let filename = \"data.json\";\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(data)))], { type: contentType });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement('a');\n      a.download = filename;\n      a.href = 'data:' + contentType + ',' + encodeURIComponent(JSON.stringify(data));\n      a.target = '_blank';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  }\n\n  const generateRandomInteger = (min, max) => {\n    return Math.floor(min + Math.random() * (max + 1 - min))\n  }\n\n  const generateRandomFloat = (min, max) => {\n    let num = min + Math.random() * (max + 1 - min)\n    return num.toFixed(2)\n  }\n\n  const generateString = (min, max) => {\n    let length = generateRandomInteger(min, max)\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n\n  const setDate = (val, i, type) => {\n    let newFields = JSON.parse(JSON.stringify(fields))\n    if (type == 'min') {\n      newFields[i].min = val\n    } else {\n      newFields[i].max = val\n    }\n    setFields(newFields)\n  }\n\n  return (\n    <Box className={classes.root}>\n      <Box className={classes.content}>\n        <Box className={classes.header}>\n          <Typography className={classes.headerText}>Simple Data Generator</Typography>\n        </Box>\n        <TextField fullWidth variant=\"outlined\" className={classes.numFields} label={\"Number of Fields\"} type=\"number\" value={numFields} onChange={changeNumFields} />\n        <Box className={classes.fieldWrapper}>\n          {\n            fields.map((field, index) => {\n              return (\n                <Box className={classes.field}>\n                  <TextField fullWidth label={\"Field Name\"} variant=\"outlined\" value={field.value} onChange={(e) => changeValue(e, index)} style={{ marginRight: 10, flex: 2 }} />\n                  <Select\n                    style={{ marginRight: 10, flex: 1, width: 100 }}\n                    variant=\"outlined\"\n                    value={field.type}\n                    onChange={(e) => changeType(e, index)}>\n                    <MenuItem value={'text'}>String</MenuItem>\n                    <MenuItem value={'int'}>Int</MenuItem>\n                    <MenuItem value={'float'}>Float</MenuItem>\n                    <MenuItem value={'boolean'}>Boolean</MenuItem>\n                    <MenuItem value={'date'}>Date</MenuItem>\n                  </Select>\n                  {\n                    field.type == 'date' ?\n                      <Box style={{ display: 'flex', flexDirection: 'row', flex: 2 }}>\n                        <DateComponent min={field.min} max={field.max} setDate={setDate} index={index} />\n                      </Box> :\n                      <Box style={{ display: 'flex', flexDirection: 'row', flex: 2 }}>\n                        <TextField disabled={field.type == 'boolean'} type='number' label=\"min\" style={{ marginRight: 10 }} fullWidth variant='outlined' value={field.min} onChange={(e) => changeMin(e, index)} />\n                        <TextField disabled={field.type == 'boolean'} type='number' label=\"max\" fullWidth variant='outlined' value={field.max} onChange={(e) => changeMax(e, index)} />\n                      </Box>\n                  }\n                </Box>\n              )\n            })\n          }\n        </Box>\n        <Box className={classes.buttonWrapper}>\n          <TextField fullWidth variant=\"outlined\" label={\"Rows\"} type=\"number\" value={numRows} onChange={(e) => setNumRows(e.target.value)} style={{ marginRight: 10 }} />\n          <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={generate} style={{ fontWeight: 500 }}>\n            Generate\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\n\nconst DateComponent = (props) => {\n  const { setDate, min, max, index } = props\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <KeyboardDatePicker\n        style={{ marginRight: 20 }}\n        margin=\"none\"\n        id=\"date-picker-dialog\"\n        label=\"Date picker dialog\"\n        format=\"MM/dd/yyyy\"\n        value={min}\n        onChange={(date) => setDate(date, index, 'min')}\n        KeyboardButtonProps={{\n          'aria-label': 'change date',\n        }}\n      />\n      <KeyboardDatePicker\n        margin=\"none\"\n        id=\"date-picker-dialog\"\n        label=\"Date picker dialog\"\n        format=\"MM/dd/yyyy\"\n        value={max}\n        onChange={(date) => setDate(date, index, 'max')}\n        KeyboardButtonProps={{\n          'aria-label': 'change date',\n        }}\n      />\n    </MuiPickersUtilsProvider>\n  )\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}